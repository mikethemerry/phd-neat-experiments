mutate_at(vars(milestone_name), factor,
levels=c("Baseline",
"6 Months Post-treatment",
"1 Year Post-treatment",
"2 Years Post-treatment"))
projections %>% head
plot_df <- projections %>%
group_by(milestone_name,
milestone_order,
name) %>%
summarise(mean = mean(value),
sd = sd(value),
n=n())
plot_df <- projections %>%
group_by(milestone_name,
name) %>%
summarise(mean = mean(value),
sd = sd(value),
n=n())
plot_df
plot_df %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
facet_grid(name~.) +
my_theme
plot_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
facet_grid(name~.) +
my_theme
patient_df <- projections %>%
filter(study_number=="000003") %>%
group_by(milestone_name,
name) %>%
summarise(pt_val = mean(value),
n=n())
patient_df
plot_df %>%
left_join(patient_df,
by=c("milestone_name", "name"))
plot_df %>%
left_join(patient_df,
by=c("milestone_name", "name"),
suffix=c(".pop",".pt"))
plot_df %>%
left_join(patient_df,
by=c("milestone_name", "name"),
suffix=c(".pop",".pt")) %>%
head
both_df <- plot_df %>%
left_join(patient_df,
by=c("milestone_name", "name"),
suffix=c(".pop",".pt"))
both_df %>%
head
both_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
geom_line(aes(x=pt_val), color="blue") +
my_theme
both_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
geom_line(aes(y=pt_val), color="blue") +
my_theme
both_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
geom_line(aes(y=pt_val, group=name), color="blue") +
my_theme
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(readr)
my_theme <-  theme(axis.text.x=element_text(angle=-5)) +
ylim(0, 100)
plt_lims <- ylim(0, 100)
both_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
geom_line(aes(y=pt_val, group=name), color="blue") +
my_theme + plt_lims
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(readr)
my_theme <-  theme(axis.text.x=element_text(angle=-5))
plt_lims <- ylim(0, 100)
responses <- read_csv("./cabrini_ichomset_colorectalcancer@4.0.0.csv")
responses %>% head
projections_wide <- responses %>%
mutate(global_health = `Global Health Status`,
functional_scale = `Functional Scale (Overall)`,
symptom_scale = `Symptom Scale (Overall)`,
average_scale = (global_health+functional_scale+symptom_scale)/3) %>%
select(-contains(" "))
projections_wide %>% glimpse
projections <- projections_wide %>%
pivot_longer(global_health:average_scale)%>%
mutate_at(vars(milestone_name), factor,
levels=c("Baseline",
"6 Months Post-treatment",
"1 Year Post-treatment",
"2 Years Post-treatment"))
projections %>% head
plot_df <- projections %>%
group_by(milestone_name,
name) %>%
summarise(mean = mean(value),
sd = sd(value),
n=n())
plot_df
plot_df %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
facet_grid(name~.) +
my_theme + plt_lims
plot_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
facet_grid(name~.) +
my_theme + plt_lims
patient_df <- projections %>%
filter(study_number=="000003") %>%
group_by(milestone_name,
name) %>%
summarise(pt_val = mean(value),
n=n())
patient_df
both_df <- plot_df %>%
left_join(patient_df,
by=c("milestone_name", "name"),
suffix=c(".pop",".pt"))
both_df %>%
head
both_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
geom_line(aes(y=pt_val, group=name), color="blue") +
my_theme + plt_lims
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
ggplot(aes(x=milestone_name, y=pt_val, group=name)) +
geom_line() +
geom_point()
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
ggplot(aes(x=milestone_name, y=pt_val, group=name, color=name)) +
geom_line() +
geom_point()
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
ggplot(aes(x=milestone_name, y=pt_val, group=name, color=name)) +
geom_line() +
geom_point() +
my_theme + plt_lims
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line()
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(c("milestone_name"))
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale"))
??pivot_wider
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val)
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line()
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line() +
xlim(0, 100) +
ylim(0, 100)
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line() +
geom_text(aes(label=milestone_name))
xlim(0, 100) +
ylim(0, 100)
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line() +
geom_text(aes(label=milestone_name)) +
xlim(0, 100) +
ylim(0, 100)
library(ggrepel)
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line() +
geom_label_repel(aes(label=milestone_name)) +
xlim(0, 100) +
ylim(0, 100)
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val)
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line() +
geom_label_repel(aes(label=milestone_name)) +
xlim(0, 100) +
ylim(0, 100)
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val)
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line() +
geom_label_repel(aes(label=milestone_name)) +
xlim(0, 100) +
ylim(0, 100)
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(readr)
library(ggrepel)
my_theme <-  theme(axis.text.x=element_text(angle=-5))
plt_lims <- ylim(0, 100)
responses <- read_csv("./cabrini_ichomset_colorectalcancer@4.0.0.csv")
responses %>% head
projections_wide <- responses %>%
mutate(global_health = `Global Health Status`,
functional_scale = `Functional Scale (Overall)`,
symptom_scale = `Symptom Scale (Overall)`,
average_scale = (global_health+functional_scale+symptom_scale)/3) %>%
select(-contains(" "))
projections_wide %>% glimpse
projections <- projections_wide %>%
pivot_longer(global_health:average_scale)%>%
mutate_at(vars(milestone_name), factor,
levels=c("Baseline",
"6 Months Post-treatment",
"1 Year Post-treatment",
"2 Years Post-treatment"))
projections %>% head
plot_df <- projections %>%
group_by(milestone_name,
name) %>%
summarise(mean = mean(value),
sd = sd(value),
n=n())
plot_df
plot_df %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
facet_grid(name~.) +
my_theme + plt_lims
plot_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
facet_grid(name~.) +
my_theme + plt_lims
patient_df <- projections %>%
filter(study_number=="000003") %>%
group_by(milestone_name,
name) %>%
summarise(pt_val = mean(value),
n=n())
patient_df
both_df <- plot_df %>%
left_join(patient_df,
by=c("milestone_name", "name"),
suffix=c(".pop",".pt"))
both_df %>%
head
both_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
geom_line(aes(y=pt_val, group=name), color="blue") +
my_theme + plt_lims
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
ggplot(aes(x=milestone_name, y=pt_val, group=name, color=name)) +
geom_line() +
geom_point() +
my_theme + plt_lims
patient_df %>%
filter(name %in% c("symptom_scale", "functional_scale")) %>%
pivot_wider(names_from=name,
values_from = pt_val) %>%
ggplot(aes(symptom_scale, functional_scale)) +
geom_point() +
geom_line() +
geom_label_repel(aes(label=milestone_name)) +
xlim(0, 100) +
ylim(0, 100)
responses <- read_csv("./cabrini_ichomset_colorectalcancer@4.0.0.csv")
responses %>% head
responses <- read_csv("./cabrini_ichomset_colorectalcancer@4.0.0.csv")
responses %>% head
responses <- read_csv("./cabrini_ichomset_colorectalcancer@4.0.0.csv")
responses %>% head
projections %>%
head
projections %>%
group_by(status) %>%
summarise(n_distinct(study_number))
projections %>%
group_by(milestone_name) %>%
summarise(n_distinct(study_number))
projections %>%
group_by(milestone_name) %>%
summarise(n=n(),
distinct_pts = n_distinct(study_number))
projections %>% head
projections %>% head
projections %>%
group_by(milestone_name) %>%
summarise(n=n(),
distinct_pts = n_distinct(response_id))
projections %>%
group_by(milestone_name) %>%
summarise(n=n(),
distinct_pts = n_distinct(response_id))
projections %>%
group_by(milestone_name,
ethnicity) %>%
summarise(n=n(),
distinct_pts = n_distinct(response_id))
projections %>%
group_by(milestone_name,
ethnicity) %>%
summarise(distinct_pts = n_distinct(response_id))
projections %>%
group_by(milestone_name,
ethnicity) %>%
summarise(responses = n_distinct(response_id))
projections %>%
group_by(milestone_name,
ethnicity) %>%
summarise(responses = n_distinct(response_id)) %>%
ggplot(aes(milestone_name, responses)) +
geom_boxplot()
projections %>%
group_by(milestone_name,
ethnicity) %>%
summarise(responses = n_distinct(response_id)) %>%
ggplot(aes(milestone_name, responses)) +
geom_bar()
projections %>%
group_by(milestone_name,
ethnicity) %>%
summarise(responses = n_distinct(response_id)) %>%
ggplot(aes(milestone_name, responses)) +
geom_col()
projections %>%
group_by(milestone_name,
ethnicity) %>%
summarise(responses = n_distinct(response_id)) %>%
ggplot(aes(milestone_name, responses, group=ethnicity, fill=ethnicity)) +
geom_col()
projections %>%
group_by(milestone_name,
ethnicity) %>%
summarise(responses = n_distinct(response_id)) %>%
ggplot(aes(milestone_name, responses, group=ethnicity, fill=ethnicity)) +
geom_col()+
my_theme
projections %>% View
plot_df %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
# geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
# facet_grid(name~.) +
my_theme + plt_lims
plot_df %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name, color=name)) +
# geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
# facet_grid(name~.) +
my_theme + plt_lims
plot_df %>%
filter(name=="symptom_scale") %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
facet_grid(name~.) +
my_theme + plt_lims
plot_df %>%
ggplot(aes(milestone_name)) +
geom_line(aes(y=mean, group=name, color=name)) +
geom_ribbon(aes(y=mean, ymax=mean+sd, ymin=mean-sd, fill=name, group=name), alpha=0.3) +
facet_grid(name~.) +
my_theme + plt_lims
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
sha_file <- "./sha_file.json"
sha_doc <- rjson::fromJSON(file=sha_file)
experiment_sha <- sha_doc$sha
experiment_sha
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
compute_roc <- function(preds){
my_tib<-tibble(y_test, preds)
return(roc(my_tib, y, preds))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions$roc <- map(predictions$value, compute_roc)
predictions <- predictions %>%
rowwise() %>%
mutate(
sensitivities = list(roc$sensitivities),
specificities = list(roc$specificities))
predictions %>%
select(starts_with("s")) %>%
glimpse()
long_preds <- predictions %>%
unnest_longer(c("sensitivities","specificities")) %>%
group_by(measurementType,iteration,sensitivities) %>%
summarise(specificities = max(specificities))
long_preds %>%
filter(measurementType != "propneat_retrain_prediction")%>%
ggplot(aes(1-specificities,
sensitivities,
group=interaction(measurementType,iteration),
color=measurementType)) +
geom_line() +
geom_segment(aes(x=0, y=0, xend=1, yend=1), colour="black")
long_preds %>%
filter( grepl("propne",measurementType) ) %>%
ggplot(aes(1-specificities,
sensitivities,
group=interaction(measurementType,iteration),
color=measurementType)) +
geom_line(alpha=1) +
geom_segment(aes(x=0, y=0, xend=1, yend=1), colour="black")
long_preds %>%
filter( grepl("propne",measurementType) ) %>%
mutate(opacity = if_else(measurementType == "propneat_prediction", 1, 1))%>%
ggplot(aes(1-specificities,
sensitivities,
group=interaction(measurementType,iteration),
color=measurementType,
alpha=opacity)) +
geom_line() +
facet_wrap(iteration%/%100~.) +
geom_segment(aes(x=0, y=0, xend=1, yend=1), colour="black")
results %>%
view("results")
