}
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions$auc <- map(predictions$value, compute_auc)
??roc
library(pROC)
predictions$auc <- map(predictions$value, compute_auc)
my_roc <- roc(my_tib, y, preds)
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(my_roc$auc)
}
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$auc <- map(predictions$value, compute_auc)
print(preds)
compute_auc <- function(preds){
print(preds)
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(my_roc$auc)
}
predictions$auc <- map(predictions$value, compute_auc)
compute_auc(predictions$value[[1]])
predictions$value
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions$value
predictions$auc <- map(predictions$value, compute_auc)
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(my_roc$auc)
}
predictions$auc <- map(predictions$value, compute_auc)
predictions $>$ glimpse()
predictions %>% glimpse()
predictions %>%
select(-value)
predictions %>%
select(-value,
-experimentName,
-dataset)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
my_roc
my_tib<-tibble(y_test, preds)
preds <- predictions$value[[2]]
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
my_roc$auc
my_roc$auc
my_roc$auc[[1]]
return(my_roc$auc[[1]])
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(my_roc$auc[[1]])
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
return(my_roc$auc[[1]][0])
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(my_roc$auc[[1]][0])
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
return(my_roc$auc[[1]])
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(my_roc$auc[[1]])
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions$auc
predictions$auc[[5]]
predictions$auc[[5]][[1]]
as_number(predictions$auc[[5]])
as.numeric(predictions$auc[[5]])
return(as.numeric(my_roc$auc[[1]]))
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions $>$ view
predictions $>$ glimpse
predictiosn %>% glimpse
predictions %>% view
predictions %>%
select(measurementType,
auc) %>%
glimpse
predictions %>%
select(measurementType,
auc) %>%
view
predictions %>%
select(measurementType,
value
auc) %>%
predictions %>%
select(measurementType,
value,
auc) %>%
view
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9"
experiment_sha <- "b53e57d1"
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9"
experiment_sha <- "b53e57d1"
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
jsonify::from_json("./sha_file.json")
rjson::fromJSON("./sha_file.json")
rjson::fromJSON("./sha_file.json")
rjson::fromJSON("sha_file.json")
?rjson::fromJSON
setwd("~/dev-mtm/phd-neat-experiments/experiments/bchard-benchmarking")
rjson::fromJSON("./sha_file.json")
rjson::fromJSON(file="./sha_file.json")
experiment_sha <- sha_doc$sha
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
sha_file <- "./sha_file.json"
sha_doc <- rjson::fromJSON(file=sha_file)
experiment_sha <- sha_doc$sha
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
sha_file <- "./sha_file.json"
sha_doc <- rjson::fromJSON(file=sha_file)
experiment_sha <- sha_doc$sha
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
knitr::opts_chunk$set(echo = TRUE)
require("tidyverse")
library(pROC)
experiment_sha <- "24c00ce9" # 24088379
experiment_sha <- "b53e57d1"
experiment_sha <- "24088379"
experiment_sha <- "b4c86de1"
sha_file <- "./sha_file.json"
sha_doc <- rjson::fromJSON(file=sha_file)
experiment_sha <- sha_doc$sha
results <- read_csv("./../../data/experiments/tests/data/resultsDatabase.csv")
y_test <- read_csv(str_glue("./../../data/processed/bchard_benchmark/",experiment_sha, "/y_test.csv"))
y_test %>%
glimpse()
results %>%
glimpse()
predictions <- results %>%
filter(str_detect(measurementType, "predict"),
experimentSha == experiment_sha)
predictions$value <- map(predictions$value, jsonlite::fromJSON)
predictions %>%
glimpse
compute_auc <- function(preds){
my_tib<-tibble(y_test, preds)
my_roc <- roc(my_tib, y, preds)
return(as.numeric(my_roc$auc[[1]]))
}
predictions$auc <- map(predictions$value, compute_auc)
predictions %>%
select(-value,
-experimentName,
-dataset,
-params)
predictions %>%
select(measurementType,
value,
auc) %>%
view
y_test
